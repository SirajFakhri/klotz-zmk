#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define MIRROR 1
#define NAV  2
#define SYM  3
#define ADJ  4
#define PHSH 5
#define PROG 6

&sl { /delete-property/ quick-release; };

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <35>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        compatible = "zmk,combos";

        combo_bspc {
            timeout-ms = <35>;
            key-positions = <3 2>;
            bindings = <&kp BSPC>;
        };

        compatible = "zmk,combos";

        combo_del {
            timeout-ms = <35>;
            key-positions = <3 4>;
            bindings = <&kp DEL>;
        };

        compatible = "zmk,combos";

        combo_ctrlz {
            timeout-ms = <35>;
            key-positions = <20 21>;
            bindings = <&macro_crtlz>;
        };

        compatible = "zmk,combos";

        combo_ctrlshftz {
            timeout-ms = <35>;
            key-positions = <20 21 31>;
            bindings = <&macro_crtlshftz>;
        };

        compatible = "zmk,combos";

        combo_ctrlx {
            timeout-ms = <35>;
            key-positions = <21 22>;
            bindings = <&macro_crtlx>;
        };

        compatible = "zmk,combos";

        combo_ctrlc {
            timeout-ms = <35>;
            key-positions = <22 23>;
            bindings = <&macro_crtlc>;
        };

        compatible = "zmk,combos";

        combo_ctrlv {
            timeout-ms = <35>;
            key-positions = <21 23>;
            bindings = <&macro_crtlv>;
        };

        Enter {
            bindings = <&kp RET>;
            key-positions = <12 14>;
            timeout-ms = <35>;
        };

        ctrlshftv {
            bindings = <&macro_ctrlshftv>;
            key-positions = <23 21 31>;
            timeout-ms = <35>;
        };

        home {
            bindings = <&to 0>;
            key-positions = <0 31>;
            timeout-ms = <35>;
        };

        Combo_ctrlbkspc {
            bindings = <&Macro_ctrlbkspc>;
            key-positions = <1 2>;
            timeout-ms = <35>;
        };

        combo_ctrlj {
            bindings = <&macro_ctrlj>;
            key-positions = <24 23>;
            timeout-ms = <35>;
        };

        pausebreak_prnt {
            bindings = <&kp PAUSE_BREAK>;
            key-positions = <2 4 1>;
            timeout-ms = <35>;
        };

        fullstop {
            bindings = <&kp PERIOD>;
            key-positions = <17 18>;
            timeout-ms = <35>;
        };

        comma {
            bindings = <&kp COMMA>;
            key-positions = <17 16>;
            timeout-ms = <35>;
        };

        exclaimation {
            bindings = <&kp EXCLAMATION>;
            key-positions = <8 6>;
            timeout-ms = <35>;
        };

        questionmark {
            bindings = <&kp QUESTION>;
            key-positions = <6 7>;
            timeout-ms = <35>;
        };

        colon {
            bindings = <&kp COLON>;
            key-positions = <18 16>;
            timeout-ms = <35>;
        };

        fwd_slash {
            bindings = <&kp SLASH>;
            key-positions = <5 6>;
            timeout-ms = <35>;
        };

        dash_undrscore {
            bindings = <&kp MINUS>;
            key-positions = <27 28>;
            timeout-ms = <35>;
        };

        apostrophe {
            bindings = <&kp APOSTROPHE>;
            key-positions = <8 7>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <28 26>;
            timeout-ms = <35>;
        };

        photoshop {
            bindings = <&to 5>;
            key-positions = <1 31>;
            timeout-ms = <35>;
        };

        combo_ctrlo {
            bindings = <&macro_ctrlo>;
            key-positions = <20 14>;
            timeout-ms = <35>;
        };

        combo_ctrln {
            bindings = <&macro_ctrln>;
            key-positions = <20 4>;
            timeout-ms = <35>;
        };

        blender {
            bindings = <&to 7>;
            key-positions = <10 31>;
            timeout-ms = <35>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
            timeout-ms = <35>;
        };

        combo_ctrlq {
            bindings = <&macro_ctrlq>;
            key-positions = <0 20>;
        };

        combo_backward {
            bindings = <&kp C_AC_BACK>;
            key-positions = <1 10>;
        };

        v_blender {
            bindings = <&kp V>;
            key-positions = <14 22>;
        };

        win_e {
            bindings = <&macro_win_e>;
            key-positions = <4 0>;
        };

        combo_asterisk {
            bindings = <&kp ASTRK>;
            key-positions = <4 24>;
        };

        combo_rightclick {
            bindings = <&mkp RCLK>;
            key-positions = <4 2 2>;
        };

        combo_mouse4 {
            bindings = <&mkp MB4>;
            key-positions = <3 1>;
        };

        combo_mouse5 {
            bindings = <&mkp MB5>;
            key-positions = <2 0>;
        };
    };

    macros {
        tabcw: tabcw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp TAB>;
        };

        tabccw: tabccw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_crtlz: macro_ctrlz {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp Z>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        macro_crtlshftz: macro_ctrlshftz {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp Z>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_crtlx: macro_ctrlx {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp X>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        macro_crtlc: macro_ctrlc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        macro_crtlv: macro_ctrlv {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        macro_ctrlshftv: macro_ctrlshftv {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_release>,
                <&kp LSHFT>;

            label = "MACRO_CTRLSHFTV";
        };

        macro_ctrlshftc: macro_ctrlshftc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_release>,
                <&kp LSHFT>;

            label = "MACRO_CTRLSHFTC";
        };

        Macro_ctrlbkspc: Macro_ctrlbkspc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp BACKSPACE>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "MACRO_CTRLBKSPC";
        };

        macro_ctrlj: macro_ctrlj {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp J>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "MACRO_CTRLJ";
        };

        macro_ctrlo: macro_ctrlo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp O>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "MACRO_CTRLO";
        };

        macro_ctrln: macro_ctrln {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp N>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "MACRO_CTRLN";
        };

        macro_num225: macro_num225 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N2 &kp N2 &kp DOT &kp N5>;
            label = "MACRO_NUM225";
        };

        macro_num45: macro_num45 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N4 &kp N5>;
            label = "MACRO_NUM45";
        };

        macro_num90: macro_num90 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N9 &kp N0>;
            label = "MACRO_NUM90";
        };

        macro_ctrlq: macro_ctrlq {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp Q>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "MACRO_CTRLQ";
        };

        macro_alttab: macro_alttab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "MACRO_ALTTAB";
        };

        macro_backward: macro_backward {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "MACRO_BACKWARD";
        };

        macro_win_e: macro_win_e {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp E>,
                <&macro_release>,
                <&kp LEFT_WIN>;

            label = "MACRO_WIN_E";
        };
    };

    behaviors {
        encoder_vol: encoder_vol {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOL_UP>, <&kp C_VOL_DN>;

            label = "ENCODER_VOL";
        };

        ct: custom_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            display-name = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            // ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            // ┃    LGUI   ┃     W     ┃     F     ┃     P     ┃     B     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     Q     ┃
            // ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            // ┃     A     ┃     R     ┃     S     ┃     T     ┃     G     ┃   ┃     M     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            // ┃   LCTRL   ┃   LSHFT   ┃   LALT    ┃     D     ┃     V     ┃   ┃     K     ┃     H     ┃     C     ┃     X     ┃     Z     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃   ENTER   ┃    SPC    ┃   ┃    TAB    ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
  &kp LGUI   &kp W           &kp F     &kp P      &kp B          &kp J        &kp L           &kp U  &kp Y  &kp Q
  &kp A      &kp R           &kp S     &kp T      &kp G          &kp M        &kp N           &kp E  &kp I  &kp O
  &kp LCTRL  &kp LEFT_SHIFT  &kp LALT  &kp D      &kp V          &kp K        &kp H           &kp C  &kp X  &kp Z
                                       &lt 1 TAB  &lt 2 SPACE    &lt 3 ENTER  &ct RSHFT BSPC
            >;

            sensor-bindings = <&encoder_vol>, <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        PROGRAM_LAYER {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            display-name = "PROG";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            // ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            // ┃     Q     ┃     Y     ┃     U     ┃     L     ┃     J     ┃   ┃           ┃           ┃           ┃           ┃           ┃
            // ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            // ┃     O     ┃     I     ┃     E     ┃     N     ┃     M     ┃   ┃           ┃           ┃           ┃           ┃           ┃
            // ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            // ┃     Z     ┃     X     ┃     C     ┃     H     ┃     K     ┃   ┃           ┃           ┃           ┃           ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃           ┃   ┃           ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
  &kp F13  &kp F14  &kp F15  &kp F16      &kp F17    &tog 5  &to 7   &trans  &trans  &trans
  &kp F18  &kp F19  &kp F20  &kp F21      &kp F22    &to 9   &trans  &trans  &trans  &trans
  &kp F2   &kp F23  &kp F24  &key_repeat  &trans     &trans  &trans  &trans  &trans  &trans
                             &trans       &trans     &trans  &trans
            >;

            sensor-bindings = <&encoder_vol>, <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        nav_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            display-name = "NAVI";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            // ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            // ┃  VOL UP   ┃   PREV    ┃PLAY/PAUSE ┃   NEXT    ┃   ESC     ┃   ┃     7     ┃     8     ┃     9     ┃     0     ┃    TAB    ┃
            // ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            // ┃  VOL DOWN ┃   LEFT    ┃    UP     ┃   RIGHT   ┃   LGUI    ┃   ┃     4     ┃     5     ┃     6     ┃    - _    ┃    + =    ┃
            // ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            // ┃   MUTE    ┃   ENTER   ┃   DOWN    ┃  P DOWN   ┃   P UP    ┃   ┃     1     ┃     2     ┃     3     ┃     *     ┃   PROG    ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃   ENTER   ┃           ┃   ┃  ADJUST   ┃   PHSH    ┃  
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
  &kp C_VOL_DN    &kp C_PREV    &kp C_PP  &kp C_NEXT  &kp C_VOL_UP       &kp N0        &kp N7     &kp N8  &kp N9  &kp EQUAL
  &kp LEFT_SHIFT  &kp LEFT      &kp UP    &kp RIGHT   &key_repeat        &kp MINUS     &kp N4     &kp N5  &kp N6  &kp LS(STAR)
  &kp LCTRL       &kp LEFT_ALT  &kp DOWN  &tog 5      &ct LSHFT PG_UP    &kp LS(PLUS)  &kp N1     &kp N2  &kp N3  &kp LS(UNDER)
                                          &kp RET     &trans             &mo 4         &kp LSHFT
            >;

            sensor-bindings = <&encoder_vol>, <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        sim_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            display-name = "SYM";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            // ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            // ┃           ┃     &     ┃     *     ┃           ┃     {     ┃   ┃     }     ┃           ┃     :     ┃           ┃     ;     ┃
            // ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            // ┃           ┃     %     ┃     ?     ┃     ^     ┃     [     ┃   ┃     ]     ┃    \ |    ┃     '     ┃    "      ┃     ?     ┃
            // ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            // ┃     $     ┃     !     ┃     @     ┃     #     ┃     (     ┃   ┃     )     ┃           ┃     ,     ┃     .     ┃     /     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃   LSHFT   ┃  ADJUST   ┃   ┃           ┃           ┃   
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
  &trans     &kp AMPS   &kp KP_MULTIPLY  &kp MINUS  &kp LBRC    &kp RBRC  &kp QUESTION  &kp COLON  &trans       &kp SEMI
  &kp UNDER  &kp PRCNT  &kp QMARK        &kp EXCL   &kp LBKT    &kp RBKT  &kp COMMA     &kp DOT    &kp SQT      &kp QMARK
  &kp DLLR   &kp CARET  &kp AT           &kp HASH   &kp LPAR    &kp RPAR  &kp LSHFT     &kp FSLH   &kp LS(DQT)  &kp SQT
                                         &kp LSHFT  &mo 4       &trans    &trans
            >;

            sensor-bindings = <&encoder_vol>, <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        adjust_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            display-name = "ADJ";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            // ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            // ┃   RESET   ┃ BT CLEAR  ┃  OUT TOG  ┃           ┃           ┃   ┃           ┃    F7     ┃    F8     ┃    F9     ┃    F12    ┃
            // ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            // ┃ BOOTLOAD  ┃ BT NEXT   ┃           ┃           ┃           ┃   ┃           ┃    F4     ┃    F5     ┃    F6     ┃    F11    ┃
            // ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            // ┃  BT 0     ┃ BT PREV   ┃           ┃           ┃           ┃   ┃           ┃    F1     ┃    F2     ┃    F3     ┃    F10    ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃           ┃   ┃           ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
  &sys_reset    &bt BT_CLR  &out OUT_TOG  &trans  &trans    &trans  &kp F7  &kp F8  &kp F9  &kp F12
  &bootloader   &bt BT_NXT  &trans        &trans  &trans    &trans  &kp F4  &kp F5  &kp F6  &kp F11
  &bt BT_SEL 0  &bt BT_PRV  &trans        &trans  &trans    &trans  &kp F1  &kp F2  &kp F3  &kp F10
                                          &trans  &trans    &trans  &trans
            >;

            sensor-bindings = <&encoder_vol>, <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        photoshop_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            display-name = "PHSH";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            // ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            // ┃     X     ┃     T     ┃     W     ┃     E     ┃   TILDE   ┃   ┃     O     ┃     N     ┃     P     ┃           ┃           ┃
            // ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            // ┃   LSHFT   ┃     C     ┃     Z     ┃     B     ┃     V     ┃   ┃   ENTER   ┃    ESC    ┃           ┃           ┃           ┃
            // ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            // ┃   CTRL    ┃     S     ┃     D     ┃     U     ┃     M     ┃   ┃  PBREAK   ┃           ┃           ┃           ┃   BASE    ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃   LALT    ┃   SPACE   ┃   ┃           ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
  &lt 6 TAB  &kp C  &kp W  &kp R     &kp T        &kp O            &kp N    &kp P   &trans  &trans
  &kp LSHFT  &kp U  &kp S  &kp B     &kp GRAVE    &kp ENTER        &kp ESC  &trans  &trans  &trans
  &kp LCTRL  &kp D  &kp E  &kp V     &kp M        &kp PAUSE_BREAK  &trans   &trans  &trans  &to 0
                           &kp LALT  &kp SPACE    &trans           &trans
            >;

            sensor-bindings = <&encoder_vol>, <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        temp_PHSH {
            bindings = <
  &trans  &kp N1  &kp N2  &kp N3  &kp N0             &trans  &trans  &trans  &trans  &trans
  &trans  &kp N4  &kp N5  &kp N6  &kp PAUSE_BREAK    &trans  &trans  &trans  &trans  &trans
  &trans  &kp N7  &kp N8  &kp N9  &trans             &trans  &trans  &trans  &trans  &trans
                          &trans  &trans             &trans  &trans
            >;
        };

        blender_layer {
            bindings = <
  &kp SPACE  &kp Q  &kp E  &kp R     &kp F    &trans  &trans  &trans  &trans  &trans
  &kp LSHFT  &kp A  &kp S  &kp D     &kp G    &trans  &trans  &trans  &trans  &trans
  &kp LCTRL  &kp Z  &kp X  &kp C     &kp B    &trans  &trans  &trans  &trans  &trans
                           &kp LALT  &sl 8    &trans  &trans
            >;
        };

        blender_layer2 {
            bindings = <
  &macro_num90  &macro_num225  &kp U   &kp I   &kp O     &kp F12  &kp N7  &kp N8  &kp N9  &kp ASTERISK
  &macro_num45  &kp N1         &kp N2  &kp N3  &kp N     &trans   &kp N4  &kp N5  &kp N6  &kp MINUS
  &kp LCTRL     &kp MINUS      &kp T   &kp L   &kp M     &kp N0   &kp N1  &kp N2  &kp N3  &kp PLUS
                                       &trans  &trans    &trans   &trans
            >;
        };

        gaming_layer {
            bindings = <
  &kp Z      &kp Q  &kp R  &kp E     &kp I        &kp N1   &kp N2    &kp N3    &kp N4     &kp N5
  &kp LSHFT  &kp A  &kp W  &kp D     &kp F        &kp RET  &kp LEFT  &kp UP    &kp RIGHT  &kp BSPC
  &kp LCTRL  &kp X  &kp S  &kp C     &kp V        &kp M    &trans    &kp DOWN  &trans     &to 0
                           &kp LALT  &kp SPACE    &kp RET  &mo 2
            >;
        };
    };
};
